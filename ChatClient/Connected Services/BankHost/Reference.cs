//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BankClient.BankHost {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BankHost.IServiceBank", CallbackContract=typeof(BankClient.BankHost.IServiceBankCallback))]
    public interface IServiceBank {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/Connect", ReplyAction="http://tempuri.org/IServiceBank/ConnectResponse")]
        int Connect(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/Connect", ReplyAction="http://tempuri.org/IServiceBank/ConnectResponse")]
        System.Threading.Tasks.Task<int> ConnectAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/Disconnect", ReplyAction="http://tempuri.org/IServiceBank/DisconnectResponse")]
        void Disconnect(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceBank/Disconnect", ReplyAction="http://tempuri.org/IServiceBank/DisconnectResponse")]
        System.Threading.Tasks.Task DisconnectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/SendMsg")]
        void SendMsg(string msg, int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/SendMsg")]
        System.Threading.Tasks.Task SendMsgAsync(string msg, int id);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/AddMoney")]
        void AddMoney(int sum);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/AddMoney")]
        System.Threading.Tasks.Task AddMoneyAsync(int sum);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/ShowBalance")]
        void ShowBalance();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/ShowBalance")]
        System.Threading.Tasks.Task ShowBalanceAsync();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/TakeMoney")]
        void TakeMoney(int sum);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/TakeMoney")]
        System.Threading.Tasks.Task TakeMoneyAsync(int sum);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/LogToFile")]
        void LogToFile(string text);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/LogToFile")]
        System.Threading.Tasks.Task LogToFileAsync(string text);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/TakeMoneyMonualy")]
        void TakeMoneyMonualy(int sum);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/TakeMoneyMonualy")]
        System.Threading.Tasks.Task TakeMoneyMonualyAsync(int sum);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceBankCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IServiceBank/MsgCallback")]
        void MsgCallback(string msg);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceBankChannel : BankClient.BankHost.IServiceBank, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceBankClient : System.ServiceModel.DuplexClientBase<BankClient.BankHost.IServiceBank>, BankClient.BankHost.IServiceBank {
        
        public ServiceBankClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceBankClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceBankClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBankClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceBankClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public int Connect(string name) {
            return base.Channel.Connect(name);
        }
        
        public System.Threading.Tasks.Task<int> ConnectAsync(string name) {
            return base.Channel.ConnectAsync(name);
        }
        
        public void Disconnect(int id) {
            base.Channel.Disconnect(id);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(int id) {
            return base.Channel.DisconnectAsync(id);
        }
        
        public void SendMsg(string msg, int id) {
            base.Channel.SendMsg(msg, id);
        }
        
        public System.Threading.Tasks.Task SendMsgAsync(string msg, int id) {
            return base.Channel.SendMsgAsync(msg, id);
        }
        
        public void AddMoney(int sum) {
            base.Channel.AddMoney(sum);
        }
        
        public System.Threading.Tasks.Task AddMoneyAsync(int sum) {
            return base.Channel.AddMoneyAsync(sum);
        }
        
        public void ShowBalance() {
            base.Channel.ShowBalance();
        }
        
        public System.Threading.Tasks.Task ShowBalanceAsync() {
            return base.Channel.ShowBalanceAsync();
        }
        
        public void TakeMoney(int sum) {
            base.Channel.TakeMoney(sum);
        }
        
        public System.Threading.Tasks.Task TakeMoneyAsync(int sum) {
            return base.Channel.TakeMoneyAsync(sum);
        }
        
        public void LogToFile(string text) {
            base.Channel.LogToFile(text);
        }
        
        public System.Threading.Tasks.Task LogToFileAsync(string text) {
            return base.Channel.LogToFileAsync(text);
        }
        
        public void TakeMoneyMonualy(int sum) {
            base.Channel.TakeMoneyMonualy(sum);
        }
        
        public System.Threading.Tasks.Task TakeMoneyMonualyAsync(int sum) {
            return base.Channel.TakeMoneyMonualyAsync(sum);
        }
    }
}
